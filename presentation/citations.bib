@book{eisenberg2016dependent,
  title={Dependent types in Haskell: Theory and practice},
  author={Eisenberg, Richard A},
  year={2016},
  publisher={University of Pennsylvania}
}

@misc{gross2021nogil,
  title = {Multithreaded Python without the GIL},
  url = {https://docs.google.com/document/d/18CXhDb1ygxg-YXNBJNzfzZsDFosB5e6BfnXLlejd9l0/edit},
  author = {Sam Gross},
  year = {2021}
}

@misc{projecteverest,
  title = {Project Everest},
  url = {https://project-everest.github.io/}
}

@article{dexlang2021,
author = {Paszke, Adam and Johnson, Daniel D. and Duvenaud, David and Vytiniotis, Dimitrios and Radul, Alexey and Johnson, Matthew J. and Ragan-Kelley, Jonathan and Maclaurin, Dougal},
doi = {10.1145/3473593},
journal = {Proceedings of the ACM on Programming Languages},
month = {8},
title = {{Getting to the Point: Index Sets and Parallelism-Preserving Autodiff for Pointful Array Programming}},
url = {https://doi.org/10.1145/3473593},
volume = {5},
year = {2021}
}

@inproceedings{rudra2021,
author = {Bae, Yechan and Kim, Youngsuk and Askar, Ammar and Lim, Jungwon and Kim, Taesoo},
month = {10},
title = {{Rudra: Finding Memory Safety Bugs in Rust at the Ecosystem Scale}},
year = {2021}
}

@inproceedings{koika2020,
author = {Bourgeat, Thomas and Pit-Claudel, Cl\'{e}ment and Chlipala, Adam and Arvind},
title = {The Essence of Bluespec: A Core Language for Rule-Based Hardware Design},
year = {2020},
isbn = {9781450376136},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3385965},
doi = {10.1145/3385412.3385965},
abstract = {The Bluespec hardware-description language presents a significantly higher-level view than hardware engineers are used to, exposing a simpler concurrency model that promotes formal proof, without compromising on performance of compiled circuits. Unfortunately, the cost model of Bluespec has been unclear, with performance details depending on a mix of user hints and opaque static analysis of potential concurrency conflicts within a design. In this paper we present Koika, a derivative of Bluespec that preserves its desirable properties and yet gives direct control over the scheduling decisions that determine performance. Koika has a novel and deterministic operational semantics that uses dynamic analysis to avoid concurrency anomalies. Our implementation includes Coq definitions of syntax, semantics, key metatheorems, and a verified compiler to circuits. We argue that most of the extra circuitry required for dynamic analysis can be eliminated by compile-time BSV-style static analysis.},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {243â€“257},
numpages = {15},
keywords = {Semantics, Compiler Correctness, Hardware Description Language},
location = {London, UK},
series = {PLDI 2020}
}

@inproceedings{chen2015using,
  title={Using Crash Hoare logic for certifying the FSCQ file system},
  author={Chen, Haogang and Ziegler, Daniel and Chajed, Tej and Chlipala, Adam and Kaashoek, M Frans and Zeldovich, Nickolai},
  booktitle={Proceedings of the 25th Symposium on Operating Systems Principles},
  pages={18--37},
  year={2015}
}